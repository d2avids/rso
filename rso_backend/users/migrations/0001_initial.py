# Generated by Django 4.2.7 on 2023-11-21 09:47

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='RSOUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('username', models.CharField(max_length=150, unique=True, verbose_name='Ник')),
                ('first_name', models.CharField(max_length=150, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=150, verbose_name='Фамилия')),
                ('patronymic_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='Отчество')),
                ('date_of_birth', models.DateField(verbose_name='Дата рождения')),
                ('last_name_lat', models.CharField(blank=True, max_length=150, null=True, verbose_name='Фамилия (латиница)')),
                ('first_name_lat', models.CharField(blank=True, max_length=150, null=True, verbose_name='Имя (латиница)')),
                ('patronymic_lat', models.CharField(blank=True, max_length=150, null=True, verbose_name='Отчество (латиница)')),
                ('phone_number', models.CharField(blank=True, default='+7', max_length=30, null=True, verbose_name='Номер телефона')),
                ('gender', models.CharField(choices=[('male', 'Мужской'), ('female', 'Женский')], max_length=30, verbose_name='Пол')),
                ('unit_type', models.CharField(choices=[('detachment', 'Отряд'), ('other_unit', 'Другая структурная единица')], default='detachment', max_length=150, verbose_name='Тип структурной единицы')),
                ('address', models.CharField(blank=True, max_length=150, null=True, verbose_name='Фактическое место проживания')),
                ('bio', models.TextField(blank=True, max_length=400, null=True, verbose_name='О себе')),
                ('social_vk', models.CharField(blank=True, default='https://vk.com/', max_length=50, verbose_name='Ссылка на ВК')),
                ('social_tg', models.CharField(blank=True, default='https://t.me/', max_length=50, verbose_name='Ссылка на Телеграм')),
                ('membership_fee', models.BooleanField(default=False, verbose_name='Членский взнос оплачен')),
                ('position', models.CharField(blank=True, choices=[('', 'Без должности'), ('Комиссар', 'Комиссар'), ('Мастер-методист', 'Мастер-методист'), ('Специалист', 'Специалист'), ('Командир', 'Командир')], default='', max_length=20, verbose_name='Должность')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название направления')),
            ],
            options={
                'verbose_name': 'Направление',
                'verbose_name_plural': 'направления',
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='Название')),
                ('branch', models.CharField(db_index=True, default='региональное отделение', max_length=100, verbose_name='Региональное отделение')),
            ],
            options={
                'verbose_name': 'Регион',
                'verbose_name_plural': 'регионы',
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='Название')),
                ('about', models.CharField(blank=True, default='', max_length=500, verbose_name='Описание')),
                ('emblem', models.ImageField(blank=True, upload_to='emblems/%Y/%m/%d', verbose_name='Эмблема')),
                ('social_vk', models.CharField(blank=True, default='https://vk.com/', max_length=50, verbose_name='Ссылка ВК')),
                ('social_tg', models.CharField(blank=True, default='https://', max_length=50, verbose_name='Ссылка Телеграм')),
                ('banner', models.ImageField(blank=True, upload_to='emblems/%Y/%m/%d', verbose_name='Баннер')),
                ('slogan', models.CharField(blank=True, default='', max_length=100, verbose_name='Девиз')),
                ('founding_date', models.DateField(blank=True, null=True, verbose_name='Дата основания')),
                ('commander', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='commander', to=settings.AUTH_USER_MODEL, verbose_name='Командир')),
            ],
            options={
                'verbose_name': 'Структурная единица',
                'verbose_name_plural': 'структурные единицы',
            },
        ),
        migrations.CreateModel(
            name='UserRegion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reg_town', models.CharField(blank=True, max_length=40, null=True, verbose_name='Населенный пункт прописки')),
                ('reg_house', models.CharField(blank=True, max_length=40, null=True, verbose_name='Улица, дом, кв. прописки')),
                ('reg_fac_same_address', models.BooleanField(default=False, verbose_name='Адреса регистрации и фактический совпадают')),
                ('fact_town', models.CharField(blank=True, max_length=40, null=True, verbose_name='Населенный пункт проживания')),
                ('fact_house', models.CharField(blank=True, max_length=40, null=True, verbose_name='Улица, дом, кв. проживания')),
                ('fact_region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='fact_region', to='users.region', verbose_name='Регион проживания')),
                ('reg_region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='user_region_region', to='users.region', verbose_name='Регион прописки')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_region', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Информация о регионе пользователя',
                'verbose_name_plural': 'Информация о регионе пользователей',
            },
        ),
        migrations.CreateModel(
            name='UserPrivacySettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('privacy_telephone', models.CharField(choices=[('all', 'Все'), ('detachment_members', 'Члены отряда'), ('management_members', 'Руководство')], default='all', max_length=20, verbose_name='Кто видит номер телефона')),
                ('privacy_email', models.CharField(choices=[('all', 'Все'), ('detachment_members', 'Члены отряда'), ('management_members', 'Руководство')], default='all', max_length=20, verbose_name='Кто видит электронную почту')),
                ('privacy_social', models.CharField(choices=[('all', 'Все'), ('detachment_members', 'Члены отряда'), ('management_members', 'Руководство')], default='all', max_length=20, verbose_name='Кто видит ссылки на соц.сети')),
                ('privacy_about', models.CharField(choices=[('all', 'Все'), ('detachment_members', 'Члены отряда'), ('management_members', 'Руководство')], default='all', max_length=20, verbose_name='Кто видит информацию "Обо мне"')),
                ('privacy_photo', models.CharField(choices=[('all', 'Все'), ('detachment_members', 'Члены отряда'), ('management_members', 'Руководство')], default='all', max_length=20, verbose_name='Кто видит мои фотографии')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='privacy', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Настройки приватности пользователя',
                'verbose_name_plural': 'Настройки приватности пользователей',
            },
        ),
        migrations.CreateModel(
            name='UserMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('banner', models.ImageField(blank=True, upload_to='users/banner/%Y/%m/%d', verbose_name='Баннер личной страницы')),
                ('photo', models.ImageField(blank=True, upload_to='users/avatar/%Y/%m/%d', verbose_name='Аватарка')),
                ('photo1', models.ImageField(blank=True, upload_to='users/photo/%Y/%m/%d', verbose_name='Фото 1')),
                ('photo2', models.ImageField(blank=True, upload_to='users/photo/%Y/%m/%d', verbose_name='Фото 2')),
                ('photo3', models.ImageField(blank=True, upload_to='users/photo/%Y/%m/%d', verbose_name='Фото 3')),
                ('photo4', models.ImageField(blank=True, upload_to='users/photo/%Y/%m/%d', verbose_name='Фото 4')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Медиа пользователя',
                'verbose_name_plural': 'Медиа пользователей',
            },
        ),
        migrations.CreateModel(
            name='UserEducation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('study_institution', models.CharField(blank=True, max_length=200, null=True, verbose_name='Образовательная организация')),
                ('study_faculty', models.CharField(blank=True, max_length=200, null=True, verbose_name='Факультет')),
                ('study_group', models.CharField(blank=True, max_length=20, null=True, verbose_name='Группа')),
                ('study_form', models.CharField(blank=True, choices=[('full_time', 'очная'), ('part_time', 'очно-заочная'), ('extramural_studies', 'заочная'), ('distant_studies', 'дистанционное')], max_length=20, null=True, verbose_name='Форма обучения')),
                ('study_year', models.CharField(blank=True, max_length=10, null=True, verbose_name='Курс')),
                ('study_specialty', models.CharField(blank=True, max_length=40, null=True, verbose_name='Специальность')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='education', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Образовательная информация пользователя',
                'verbose_name_plural': 'Образовательная информация пользователей',
            },
        ),
        migrations.CreateModel(
            name='UserDocuments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('snils', models.CharField(blank=True, default='', max_length=15, verbose_name='СНИЛС')),
                ('inn', models.CharField(blank=True, default='', max_length=15, verbose_name='ИНН')),
                ('pass_ser_num', models.CharField(blank=True, default='', max_length=15, verbose_name='Номер и серия паспорта')),
                ('pass_town', models.CharField(blank=True, default='', max_length=15, verbose_name='Город рождения')),
                ('pass_whom', models.CharField(blank=True, max_length=15, null=True, verbose_name='Кем выдан паспорт')),
                ('pass_date', models.DateField(blank=True, null=True, verbose_name='Дата выдачи паспорта')),
                ('pass_code', models.CharField(blank=True, max_length=15, null=True, verbose_name='Код подразделения, выдавшего паспорт')),
                ('pass_address', models.CharField(blank=True, max_length=15, null=True, verbose_name='Место регистрации по паспорту')),
                ('work_book_num', models.CharField(blank=True, max_length=15, null=True, verbose_name='Трудовая книжка номер')),
                ('international_pass', models.CharField(blank=True, max_length=15, null=True, verbose_name='Загранпаспорт номер')),
                ('mil_reg_doc_type', models.CharField(blank=True, choices=[('military_certificate', 'Удостоверение гражданина подлежащего вызову на срочную военную службу'), ('military_ticket', 'Военный билет')], max_length=20, null=True, verbose_name='Тип документа воинского учета')),
                ('mil_reg_doc_ser_num', models.CharField(blank=True, default='', max_length=15, verbose_name='Номер и серия документа воинского учета')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Документы пользователя',
                'verbose_name_plural': 'Документы пользователей',
            },
        ),
        migrations.AddField(
            model_name='rsouser',
            name='region',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='users.region', verbose_name='Регион ОО'),
        ),
        migrations.AddField(
            model_name='rsouser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='Detachment',
            fields=[
                ('unit_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='users.unit')),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='users.area', verbose_name='Направление')),
            ],
            options={
                'verbose_name': 'Отряд',
                'verbose_name_plural': 'отряды',
            },
            bases=('users.unit',),
        ),
        migrations.AddField(
            model_name='rsouser',
            name='detachment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='users.detachment', verbose_name='Отряд'),
        ),
    ]
